on: [push]
name: "Docker build"
jobs:
    build-whole-application:
        name: Build application and run standards checks and tests
        runs-on: 'ubuntu-20.04'
        steps:
            -   name: GIT checkout branch - ${{ github.ref }}
                uses: actions/checkout@v2
                with:
                    ref: ${{ github.ref }}
            -   name: Build application
                run: echo 1 | ./scripts/install.sh
            -   name: Check standards
                run: docker-compose exec -T php-fpm php phing standards
            -   name: Run tests
                run: docker-compose exec -T php-fpm php phing tests
            -   name: Run acceptance tests
                run: docker-compose exec -T php-fpm php phing tests-acceptance
            -   name: PHP-FPM container logs
                if: ${{ failure() }}
                run: docker-compose logs php-fpm
            -   name: Copy Codeception logs from container
                if: ${{ failure() }}
                run: docker cp shopsys-framework-php-fpm:/var/www/html/var/log ./var/log
            -   name: Upload Codeception logs to artifacts
                if: ${{ failure() }}
                uses: actions/upload-artifact@v2
                with:
                    name: acceptance-logs
                    path: ./var/log
    mac-os-test:
        name: Docker on MacOS test
        runs-on: macos-latest
        steps:
            -   name: GIT checkout branch - ${{ github.ref }}
                uses: actions/checkout@v2
                with:
                    ref: ${{ github.ref }}
            -   uses: ruby/setup-ruby@v1
                with:
                    ruby-version: 2.6
                    bundler-cache: true
            -   name: Setup Docker
                uses: docker-practice/actions-setup-docker@master
                with:
                    docker_channel: stable
            -   run: gem install docker-sync
            -   run: mkdir -p ./var/elasticsearch-data
            -   run: chmod -R 777 ./var/elasticsearch-data
            -   run: echo 2 | ./scripts/install.sh --skip-aliasing
            -   run: docker-compose exec php-fpm ./phing checks tests-acceptance
#            -   name: Build application prerequirements on MacOS
#                run: |
#                    cp -f ./github/docker-compose.mac.yml.dist ./docker-compose.yml
#                    docker-compose up -d
#                    docker cp ./ php-fpm:/var/www/html
#                    docker cp ./docker/postgres/postgres.conf postgres:/var/lib/postgresql/data/postgresql.conf
#                    docker cp ./docker/nginx/nginx.conf webserver:/etc/nginx/conf.d/default.conf
#                    docker-compose exec -T php-fpm build-demo-dev-quick
#                    docker cp php-fpm:/var/www/html/web ./web
#                    docker cp ./web webserver:/var/www/html/web
